{"version":3,"sources":["utils/Select.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Select","TodoList","todos","selectedTodo","onChange","className","map","todo","id","completed","cn","title","type","onClick","TodoFilter","setFilterOption","setQuery","query","event","target","value","All","Active","Completed","placeholder","length","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","setSelectedTodo","useState","isLoading","setIsLoading","user","setUser","useEffect","userId","catch","console","log","finally","href","email","name","App","setTodos","filterOption","filteredTodos","useMemo","filter","toLowerCase","includes","trim","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30984b37.chunk.js","sourcesContent":["export enum Select {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onChange: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onChange = () => { },\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className=\"\"\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onChange(todo)}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', {\n                  'fa-eye': selectedTodo?.id !== todo.id,\n                  'fa-eye-slash': selectedTodo?.id === todo.id,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n\n      ))}\n    </tbody>\n  </table>\n);\n","import { Select } from '../../utils/Select';\n\ntype Props = {\n  setFilterOption: (filterOption: Select) => void,\n  setQuery: (newQuery: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  setFilterOption = () => { },\n  setQuery = () => { },\n  query,\n}) => {\n  const handleSelectChange = (event: React.ChangeEvent<HTMLSelectElement>) => (\n    setFilterOption(event.target.value as Select)\n  );\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => (\n    setQuery(event.target.value)\n  );\n  const handleButtonClick = () => setQuery('');\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value={Select.All}>All</option>\n            <option value={Select.Active}>Active</option>\n            <option value={Select.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {!!query.length && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleButtonClick}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo = () => { },\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [user, setUser] = useState<User>(null as unknown as User);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId)\n      .then(setUser)\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.log('getUser error');\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {selectedTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null as unknown as Todo)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Select } from './utils/Select';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterOption, setFilterOption] = useState(Select.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.log('setTodos error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filterOption) {\n        case Select.Active: return !todo.completed;\n        case Select.Completed: return todo.completed;\n        case Select.All:\n        default: return true;\n      }\n    }).filter(todo => todo.title.toLowerCase().includes(query.toLowerCase().trim()));\n  }, [todos, filterOption, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                setFilterOption={setFilterOption}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onChange={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}